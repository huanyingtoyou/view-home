input {
    stdin {
    }
    jdbc {
		# mysql jdbc connection string to our backup databse
		#jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/view?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=false"
		jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/view?useUnicode=true&characterEncoding=utf-8&useSSL=false"
		# the user we wish to excute our statement as
		jdbc_user => "root"
		jdbc_password => ""
		# the path to our downloaded jdbc driver
		jdbc_driver_library => "E:/software/logstash-6.4.2/mysql-connector-java/mysql-connector-java-5.1.46.jar"
		# the name of the driver class for mysql
		jdbc_driver_class => "com.mysql.jdbc.Driver"
		jdbc_paging_enabled => true
		jdbc_page_size => "50000"
		jdbc_default_timezone => "Asia/Shanghai"
		statement => "select * from t_user where UPDATE_DATE >= :sql_last_value"
		#statement_filepath => "E:/software/logstash-6.4.2/config/jdbc.sql"
		schedule => "* * * * *"
		# 是否记录上次执行结果, 如果为真,将会把上次执行到的 tracking_column 字段的值记录下来,保存到 last_run_metadata_path 指定的文件中
		#record_last_run => true

		# 是否需要记录某个column 的值,如果record_last_run为真,可以自定义我们需要 track 的 column 名称，此时该参数就要为 true. 否则默认 track 的是 timestamp 的值.
		use_column_value => true

		# 如果 use_column_value 为真,需配置此参数. track 的数据库 column 名,该 column 必须是递增的. 一般是mysql主键
		tracking_column => "UPDATE_DATE"
		
		tracking_column_type => "timestamp"

		last_run_metadata_path => "E:/software/logstash-6.4.2/logstash_update_date_last_id.txt"

		# 是否清除 last_run_metadata_path 的记录,如果为真那么每次都相当于从头开始查询所有的数据库记录
		clean_run => false

		#是否将 字段(column) 名称转小写
		lowercase_column_names => false
    }
}
 
filter {
    json {
        source => "message"
        remove_field => ["message"]
    }
}
 
output {
    elasticsearch {
        hosts => "localhost:9200"
		index => "view_user"
		document_id => "%{id}"
       
    }
    stdout {
        codec => json_lines
    }
}